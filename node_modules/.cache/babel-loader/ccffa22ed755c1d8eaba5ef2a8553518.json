{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/EditModal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport modalImage from './modalImage.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditModal(props) {\n  const change = () => {\n    document.getElementById('changeCardName').defaultValue = '';\n    props.onsubmit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modalShowing-${props.activeModal}`,\n    style: {\n      opacity: '.9'\n    },\n    children: [props.cardNewId ? console.log(props.cardNewId) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      style: {\n        backgroundImage: `url(${modalImage})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            \"data-testid\": \"cardName\",\n            style: {\n              color: '#fff',\n              fontWeight: '800',\n              fontSize: '1.5em'\n            },\n            children: \"New CardName:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-icon\",\n          onClick: props.activeEditModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"boardName\",\n          \"data-testid\": \"changeName\",\n          id: \"changeCardName\",\n          defaultValue: props.card,\n          onChange: props.onHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          \"data-testid\": \"edit-name\",\n          onClick: change,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EditModal;\nEditModal.propTypes = {\n  activeModal: PropTypes.bool.isRequired,\n  activeEditModal: PropTypes.func.isRequired,\n  cardNewId: PropTypes.string.isRequired,\n  onHandleChange: PropTypes.func.isRequired,\n  onsubmit: PropTypes.func.isRequired,\n  card: PropTypes.string.isRequired\n};\nexport default EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/EditModal.js"],"names":["React","PropTypes","modalImage","EditModal","props","change","document","getElementById","defaultValue","onsubmit","activeModal","opacity","cardNewId","console","log","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","color","fontWeight","fontSize","activeEditModal","card","onHandleChange","propTypes","bool","isRequired","func","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,MAAM,GAAG,MAAM;AACnBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,YAA1C,GAAyD,EAAzD;AACAJ,IAAAA,KAAK,CAACK,QAAN;AACD,GAHD;;AAIA,sBACE;AACE,IAAA,SAAS,EAAG,gBAAeL,KAAK,CAACM,WAAY,EAD/C;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAFT;AAAA,eAIGP,KAAK,CAACQ,SAAN,GAAkBC,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACQ,SAAlB,CAAlB,GAAiD,EAJpD,eAKE;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,KAAK,EAAE;AACLG,QAAAA,eAAe,EAAG,OAAMb,UAAW,GAD9B;AAELc,QAAAA,kBAAkB,EAAE,QAFf;AAGLC,QAAAA,cAAc,EAAE,OAHX;AAILC,QAAAA,gBAAgB,EAAE;AAJb,OAFT;AAAA,8BASE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAA,iCACE;AACE,2BAAY,UADd;AAEE,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,MAAT;AAAiBC,cAAAA,UAAU,EAAE,KAA7B;AAAoCC,cAAAA,QAAQ,EAAE;AAA9C,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAA6B,UAAA,OAAO,EAAEjB,KAAK,CAACkB,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAsBE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,WAFZ;AAGE,yBAAY,YAHd;AAIE,UAAA,EAAE,EAAC,gBAJL;AAKE,UAAA,YAAY,EAAElB,KAAK,CAACmB,IALtB;AAME,UAAA,QAAQ,EAAEnB,KAAK,CAACoB;AANlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBF,eAgCE;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,yBAAY,WAApC;AAAgD,UAAA,OAAO,EAAEnB,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD;;KAnDQF,S;AAqDTA,SAAS,CAACsB,SAAV,GAAsB;AACpBf,EAAAA,WAAW,EAAET,SAAS,CAACyB,IAAV,CAAeC,UADR;AAEpBL,EAAAA,eAAe,EAAErB,SAAS,CAAC2B,IAAV,CAAeD,UAFZ;AAGpBf,EAAAA,SAAS,EAAEX,SAAS,CAAC4B,MAAV,CAAiBF,UAHR;AAIpBH,EAAAA,cAAc,EAAEvB,SAAS,CAAC2B,IAAV,CAAeD,UAJX;AAKpBlB,EAAAA,QAAQ,EAAER,SAAS,CAAC2B,IAAV,CAAeD,UALL;AAMpBJ,EAAAA,IAAI,EAAEtB,SAAS,CAAC4B,MAAV,CAAiBF;AANH,CAAtB;AASA,eAAexB,SAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport modalImage from './modalImage.jpeg'\n\nfunction EditModal(props) {\n  const change = () => {\n    document.getElementById('changeCardName').defaultValue = ''\n    props.onsubmit()\n  }\n  return (\n    <div\n      className={`modalShowing-${props.activeModal}`}\n      style={{ opacity: '.9' }}\n    >\n      {props.cardNewId ? console.log(props.cardNewId) : ''}\n      <div\n        className=\"modal-content\"\n        style={{\n          backgroundImage: `url(${modalImage})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat'\n        }}\n      >\n        <div className=\"header\">\n          <label className=\"label\">\n            <strong\n              data-testid=\"cardName\"\n              style={{ color: '#fff', fontWeight: '800', fontSize: '1.5em' }}\n            >\n              New CardName:\n            </strong>\n          </label>\n          <span className=\"close-icon\" onClick={props.activeEditModal}>\n            &times;\n          </span>\n        </div>\n        <div className=\"footer\">\n          <input\n            type=\"text\"\n            className=\"boardName\"\n            data-testid=\"changeName\"\n            id=\"changeCardName\"\n            defaultValue={props.card}\n            onChange={props.onHandleChange}\n          ></input>\n        </div>\n        <div>\n          <button className=\"btn\" data-testid=\"edit-name\" onClick={change}>\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nEditModal.propTypes = {\n  activeModal: PropTypes.bool.isRequired,\n  activeEditModal: PropTypes.func.isRequired,\n  cardNewId: PropTypes.string.isRequired,\n  onHandleChange: PropTypes.func.isRequired,\n  onsubmit: PropTypes.func.isRequired,\n  card: PropTypes.string.isRequired\n}\n\nexport default EditModal\n"]},"metadata":{},"sourceType":"module"}