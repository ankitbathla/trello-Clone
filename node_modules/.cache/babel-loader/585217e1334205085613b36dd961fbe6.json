{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport EditModal from './EditModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  _s();\n\n  const [listData, setListData] = useState([]);\n  const [loadingList, setLoadingList] = useState(true);\n  const [cardData, setCardData] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [inputText, setInputText] = useState();\n  const [activeModal, setActiveModal] = useState(false);\n  const [cardNewId, setCardId] = useState();\n  const [name, setName] = useState();\n  const [newList, setNewList] = useState();\n\n  const onHandleChange = e => {\n    setName(e.target.value);\n  };\n\n  useEffect(() => {\n    if (id) {\n      const data = async () => {\n        const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `);\n        const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n        console.log('cards ', card.data);\n        console.log(response.data);\n        setListData(response.data);\n        setCardData(card.data);\n        setLoadingList(false);\n      };\n\n      data();\n    }\n  }, [id]);\n\n  const deleteCard = async idItem => {\n    await axios.delete(`https://api.trello.com/1/cards/${idItem}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    console.log('cards ', card.data);\n    setCardData(card.data);\n    setLoadingList(false);\n  };\n\n  const createCard = async idItem => {\n    if (inputText !== '') {\n      await axios.post(`https://api.trello.com/1/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&idList=${idItem}&name=${inputText}`);\n      const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n      console.log('cards ', card.data);\n      setCardData(card.data);\n      setLoadingList(false);\n    }\n  };\n\n  const multipleFunction = cardId => {\n    activeEditModal();\n    newId(cardId);\n  };\n\n  const newId = id => {\n    setCardId(id);\n  };\n\n  const handleChange = e => {\n    setInputText(e.target.value);\n  };\n\n  const activeEditModal = () => {\n    setActiveModal(!activeModal);\n  };\n\n  const onsubmit = async () => {\n    await axios.put(`https://api.trello.com/1/cards/${cardNewId}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${name}`);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    console.log('cards ', card.data);\n    setCardData(card.data);\n    setLoadingList(false);\n    activeEditModal();\n  };\n\n  const creatingNewList = e => {\n    console.log(newList);\n    setNewList(e.target.value);\n  };\n\n  const addNewList = async () => {\n    console.log(newList);\n    await axios.post(`https://api.trello.com/1/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${newList}&idBoard=${id}`);\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n    `);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    console.log('cards ', card.data);\n    console.log(response.data);\n    setListData(response.data);\n    setCardData(card.data);\n    setLoadingList(false);\n  };\n\n  const setIdToDelete = async listId => {\n    await axios.put(`https://api.trello.com/1/lists/${listId}/closed?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&value=true`);\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    console.log('cards ', card.data);\n    console.log(response.data);\n    setListData(response.data);\n    setCardData(card.data);\n    setLoadingList(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lists-container\",\n    children: [/*#__PURE__*/_jsxDEV(EditModal, {\n      activeModal: activeModal,\n      activeEditModal: activeEditModal,\n      cardNewId: cardNewId,\n      onsubmit: onsubmit,\n      onHandleChange: onHandleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), !loadingList ? listData.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"list-title\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fa fa-times times-btn\",\n            onClick: () => setIdToDelete(item.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-items\",\n          children: cardData.map(card => {\n            if (card.idList === item.id) {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"inner-cards\",\n                children: [card.name, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit-delete\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fa fa-trash trash-icon\",\n                    onClick: () => deleteCard(card.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fa fa-pencil\",\n                    onClick: () => multipleFunction(card.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 27\n                }, this)]\n              }, card.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 25\n              }, this);\n            } else {\n              return '';\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"  type Card Name....\",\n          className: \"create-card\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-card-btn \",\n          onClick: () => createCard(item.id),\n          children: \"Add a Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }, this);\n    }) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"create-list-input\",\n        placeholder: \"   type list name \",\n        onChange: creatingNewList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-list-btn\",\n          onClick: addNewList,\n          children: [\"Create New List \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fa fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"uuxgU95QEJeROb4EgUfTdh+7+uQ=\", false, function () {\n  return [useParams];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js"],"names":["React","useEffect","useState","useParams","axios","EditModal","List","listData","setListData","loadingList","setLoadingList","cardData","setCardData","id","inputText","setInputText","activeModal","setActiveModal","cardNewId","setCardId","name","setName","newList","setNewList","onHandleChange","e","target","value","data","response","get","card","console","log","deleteCard","idItem","delete","createCard","post","multipleFunction","cardId","activeEditModal","newId","handleChange","onsubmit","put","creatingNewList","addNewList","setIdToDelete","listId","map","item","idList"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport EditModal from './EditModal'\n\nfunction List() {\n  const [listData, setListData] = useState([])\n  const [loadingList, setLoadingList] = useState(true)\n  const [cardData, setCardData] = useState([])\n  const { id } = useParams()\n  const [inputText, setInputText] = useState()\n  const [activeModal, setActiveModal] = useState(false)\n  const [cardNewId, setCardId] = useState()\n  const [name, setName] = useState()\n  const [newList, setNewList] = useState()\n\n  const onHandleChange = (e) => {\n    setName(e.target.value)\n  }\n  useEffect(() => {\n    if (id) {\n      const data = async () => {\n        const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `)\n        const card = await axios.get(\n          `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n        )\n        console.log('cards ', card.data)\n        console.log(response.data)\n        setListData(response.data)\n        setCardData(card.data)\n        setLoadingList(false)\n      }\n      data()\n    }\n  }, [id])\n  const deleteCard = async (idItem) => {\n    await axios.delete(\n      `https://api.trello.com/1/cards/${idItem}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    console.log('cards ', card.data)\n    setCardData(card.data)\n    setLoadingList(false)\n  }\n  const createCard = async (idItem) => {\n    if (inputText !== '') {\n      await axios.post(\n        `https://api.trello.com/1/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&idList=${idItem}&name=${inputText}`\n      )\n      const card = await axios.get(\n        `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n      )\n      console.log('cards ', card.data)\n      setCardData(card.data)\n      setLoadingList(false)\n    }\n  }\n  const multipleFunction = (cardId) => {\n    activeEditModal()\n    newId(cardId)\n  }\n  const newId = (id) => {\n    setCardId(id)\n  }\n  const handleChange = (e) => {\n    setInputText(e.target.value)\n  }\n  const activeEditModal = () => {\n    setActiveModal(!activeModal)\n  }\n  const onsubmit = async () => {\n    await axios.put(\n      `https://api.trello.com/1/cards/${cardNewId}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${name}`\n    )\n\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    console.log('cards ', card.data)\n    setCardData(card.data)\n    setLoadingList(false)\n    activeEditModal()\n  }\n  const creatingNewList = (e) => {\n    console.log(newList)\n    setNewList(e.target.value)\n  }\n  const addNewList = async () => {\n    console.log(newList)\n    await axios.post(\n      `https://api.trello.com/1/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${newList}&idBoard=${id}`\n    )\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n    `)\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    console.log('cards ', card.data)\n    console.log(response.data)\n    setListData(response.data)\n    setCardData(card.data)\n    setLoadingList(false)\n  }\n  const setIdToDelete = async (listId) => {\n    await axios.put(\n      `https://api.trello.com/1/lists/${listId}/closed?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&value=true`\n    )\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `)\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    console.log('cards ', card.data)\n    console.log(response.data)\n    setListData(response.data)\n    setCardData(card.data)\n    setLoadingList(false)\n  }\n  return (\n    <div className=\"lists-container\">\n      <EditModal\n        activeModal={activeModal}\n        activeEditModal={activeEditModal}\n        cardNewId={cardNewId}\n        onsubmit={onsubmit}\n        onHandleChange={onHandleChange}\n      ></EditModal>\n      {!loadingList\n        ? listData.map((item) => {\n            return (\n              <div className=\"list\" key={item.id}>\n                <div className=\"header\">\n                  <h3 className=\"list-title\">{item.name}</h3>\n                  <span\n                    className=\"fa fa-times times-btn\"\n                    onClick={() => setIdToDelete(item.id)}\n                  ></span>\n                </div>\n\n                <ul className=\"list-items\">\n                  {cardData.map((card) => {\n                    if (card.idList === item.id) {\n                      return (\n                        <li className=\"inner-cards\" key={card.id}>\n                          {card.name}\n                          <div className=\"edit-delete\">\n                            <span\n                              className=\"fa fa-trash trash-icon\"\n                              onClick={() => deleteCard(card.id)}\n                            ></span>\n                            <span\n                              className=\"fa fa-pencil\"\n                              onClick={() => multipleFunction(card.id)}\n                            ></span>\n                          </div>\n                        </li>\n                      )\n                    } else {\n                      return ''\n                    }\n                  })}\n                </ul>\n                <input\n                  type=\"text\"\n                  placeholder=\"  type Card Name....\"\n                  className=\"create-card\"\n                  onChange={handleChange}\n                ></input>\n                <button\n                  className=\"add-card-btn \"\n                  onClick={() => createCard(item.id)}\n                >\n                  Add a Card\n                </button>\n              </div>\n            )\n          })\n        : ''}\n      <div className=\"create-list\">\n        <input\n          type=\"text\"\n          className=\"create-list-input\"\n          placeholder=\"   type list name \"\n          onChange={creatingNewList}\n        ></input>\n        <button>\n          <div className=\"create-list-btn\" onClick={addNewList}>\n            Create New List <span className=\"fa fa-plus\"></span>\n          </div>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}