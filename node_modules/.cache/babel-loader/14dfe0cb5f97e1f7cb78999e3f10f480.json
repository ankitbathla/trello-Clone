{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  const [listData, setListData] = useState([]);\n  const [loadingList, setLoadingList] = useState(true);\n  const [cardData, setCardData] = useState([]);\n  useEffect(() => {\n    if (boardId) {\n      const data = async () => {\n        const response = await axios.get(`https://api.trello.com/1/boards/${boardId}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `);\n        const card = await axios.get(`https://api.trello.com/1/boards/${boardId}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n        console.log('cards ', card.data);\n        console.log(response.data);\n        setListData(response.data);\n        setCardData(card.data);\n        setLoadingList(false);\n      };\n\n      data();\n    }\n  }, [boardId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lists-container\",\n    children: !loadingList ? listData.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"list-title\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-items\",\n          children: cardData.map(card => {\n            if (card.idList === item.id) {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"inner-cards\",\n                children: [card.name, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit-delete\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fa fa-trash trash-icon\",\n                    onClick: () => props.deleteCard(card.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fa fa-pencil\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 27\n                }, this)]\n              }, card.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 25\n              }, this);\n            } else {\n              return '';\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-card-btn \",\n          onClick: () => props.createCard(item.id),\n          children: \"Add a Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this);\n    }) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"HvPDHIEtCFY67nwDm/ySjuPgJOQ=\");\n\n_c = List;\nList.propTypes = {\n  deleteCard: PropTypes.func.isRequired,\n  createCard: PropTypes.func.isRequired\n};\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js"],"names":["React","useEffect","useState","axios","PropTypes","List","props","listData","setListData","loadingList","setLoadingList","cardData","setCardData","boardId","data","response","get","card","console","log","map","item","name","idList","id","deleteCard","createCard","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport PropTypes from 'prop-types'\n\nfunction List(props) {\n  const [listData, setListData] = useState([])\n  const [loadingList, setLoadingList] = useState(true)\n  const [cardData, setCardData] = useState([])\n  useEffect(() => {\n    if (boardId) {\n      const data = async () => {\n        const response = await axios.get(`https://api.trello.com/1/boards/${boardId}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `)\n        const card = await axios.get(\n          `https://api.trello.com/1/boards/${boardId}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n        )\n        console.log('cards ', card.data)\n        console.log(response.data)\n        setListData(response.data)\n        setCardData(card.data)\n        setLoadingList(false)\n      }\n      data()\n    }\n  }, [boardId])\n  return (\n    <div className=\"lists-container\">\n      {!loadingList\n        ? listData.map((item) => {\n            return (\n              <div className=\"list\" key={item.id}>\n                <h3 className=\"list-title\">{item.name}</h3>\n                <ul className=\"list-items\">\n                  {cardData.map((card) => {\n                    if (card.idList === item.id) {\n                      return (\n                        <li className=\"inner-cards\" key={card.id}>\n                          {card.name}\n                          <div className=\"edit-delete\">\n                            <span\n                              className=\"fa fa-trash trash-icon\"\n                              onClick={() => props.deleteCard(card.id)}\n                            ></span>\n                            <span className=\"fa fa-pencil\"></span>\n                          </div>\n                        </li>\n                      )\n                    } else {\n                      return ''\n                    }\n                  })}\n                </ul>\n                <button\n                  className=\"add-card-btn \"\n                  onClick={() => props.createCard(item.id)}\n                >\n                  Add a Card\n                </button>\n              </div>\n            )\n          })\n        : ''}\n    </div>\n  )\n}\nList.propTypes = {\n  deleteCard: PropTypes.func.isRequired,\n  createCard: PropTypes.func.isRequired\n}\nexport default List\n"]},"metadata":{},"sourceType":"module"}