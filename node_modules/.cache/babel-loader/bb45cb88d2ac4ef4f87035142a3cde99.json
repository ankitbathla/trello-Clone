{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport EditModal from './EditModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  _s();\n\n  const [listData, setListData] = useState();\n  const [cardData, setCardData] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [inputText, setInputText] = useState();\n  const [activeModal, setActiveModal] = useState(false);\n  const [cardNewId, setCardId] = useState();\n  const [name, setName] = useState();\n  const [newList, setNewList] = useState();\n\n  const onHandleChange = e => {\n    setName(e.target.value);\n  };\n\n  useEffect(() => {\n    const data = async () => {\n      const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `);\n      const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n      setListData(response.data);\n      setCardData(card.data);\n    };\n\n    data();\n  }, []);\n\n  const deleteCard = async idItem => {\n    await axios.delete(`https://api.trello.com/1/cards/${idItem}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    setCardData(card.data);\n  };\n\n  const createCard = async idItem => {\n    if (inputText !== '') {\n      await axios.post(`https://api.trello.com/1/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&idList=${idItem}&name=${inputText}`);\n      const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n      setCardData(card.data);\n    }\n  };\n\n  const multipleFunction = cardId => {\n    activeEditModal();\n    newId(cardId);\n  };\n\n  const newId = id => {\n    setCardId(id);\n  };\n\n  const handleChange = e => {\n    setInputText(e.target.value);\n  };\n\n  const activeEditModal = () => {\n    setActiveModal(!activeModal);\n  };\n\n  const onsubmit = async () => {\n    await axios.put(`https://api.trello.com/1/cards/${cardNewId}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${name}`);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    setCardData(card.data);\n    activeEditModal();\n  };\n\n  const creatingNewList = e => {\n    setNewList(e.target.value);\n  };\n\n  const addNewList = async () => {\n    await axios.post(`https://api.trello.com/1/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${newList}&idBoard=${id}`);\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n    `);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    setListData(response.data);\n    setCardData(card.data);\n  };\n\n  const setIdToDelete = async listId => {\n    await axios.put(`https://api.trello.com/1/lists/${listId}/closed?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&value=true`);\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    setListData(response.data);\n    setCardData(card.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lists-container\",\n    children: [/*#__PURE__*/_jsxDEV(EditModal, {\n      activeModal: activeModal,\n      activeEditModal: activeEditModal,\n      cardNewId: cardNewId,\n      onsubmit: onsubmit,\n      onHandleChange: onHandleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), listData ? listData.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"list-title\",\n            \"data-testid\": \"listName\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fa fa-times times-btn\",\n            \"data-testid\": \"delete\",\n            onClick: () => setIdToDelete(item.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-items\",\n          children: cardData.map(card => {\n            if (card.idList === item.id) {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"inner-cards\",\n                children: [card.name, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit-delete\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fa fa-trash trash-icon\",\n                    onClick: () => deleteCard(card.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fa fa-pencil\",\n                    onClick: () => multipleFunction(card.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this)]\n              }, card.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 23\n              }, this);\n            } else {\n              return '';\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"  type Card Name....\",\n          className: \"create-card\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-card-btn \",\n          \"data-testid\": \"create-btn\",\n          onClick: () => createCard(item.id),\n          children: \"Add a Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"loading-list\",\n      children: \"..loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"create-list-input\",\n        placeholder: \"   type list name \",\n        onChange: creatingNewList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-list-btn\",\n          onClick: addNewList,\n          \"data-testid\": \"createList\",\n          children: [\"Create New List \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fa fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"sjDqPnSQDfyHTtrP4nYzo5Equ48=\", false, function () {\n  return [useParams];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js"],"names":["React","useEffect","useState","useParams","axios","EditModal","List","listData","setListData","cardData","setCardData","id","inputText","setInputText","activeModal","setActiveModal","cardNewId","setCardId","name","setName","newList","setNewList","onHandleChange","e","target","value","data","response","get","card","deleteCard","idItem","delete","createCard","post","multipleFunction","cardId","activeEditModal","newId","handleChange","onsubmit","put","creatingNewList","addNewList","setIdToDelete","listId","map","item","idList"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport EditModal from './EditModal'\n\nfunction List() {\n  const [listData, setListData] = useState()\n  const [cardData, setCardData] = useState([])\n  const { id } = useParams()\n  const [inputText, setInputText] = useState()\n  const [activeModal, setActiveModal] = useState(false)\n  const [cardNewId, setCardId] = useState()\n  const [name, setName] = useState()\n  const [newList, setNewList] = useState()\n\n  const onHandleChange = (e) => {\n    setName(e.target.value)\n  }\n  useEffect(() => {\n    const data = async () => {\n      const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `)\n      const card = await axios.get(\n        `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n      )\n      setListData(response.data)\n      setCardData(card.data)\n    }\n    data()\n  }, [])\n  const deleteCard = async (idItem) => {\n    await axios.delete(\n      `https://api.trello.com/1/cards/${idItem}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    setCardData(card.data)\n  }\n  const createCard = async (idItem) => {\n    if (inputText !== '') {\n      await axios.post(\n        `https://api.trello.com/1/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&idList=${idItem}&name=${inputText}`\n      )\n      const card = await axios.get(\n        `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n      )\n      setCardData(card.data)\n    }\n  }\n  const multipleFunction = (cardId) => {\n    activeEditModal()\n    newId(cardId)\n  }\n  const newId = (id) => {\n    setCardId(id)\n  }\n  const handleChange = (e) => {\n    setInputText(e.target.value)\n  }\n  const activeEditModal = () => {\n    setActiveModal(!activeModal)\n  }\n  const onsubmit = async () => {\n    await axios.put(\n      `https://api.trello.com/1/cards/${cardNewId}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${name}`\n    )\n\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    setCardData(card.data)\n    activeEditModal()\n  }\n  const creatingNewList = (e) => {\n    setNewList(e.target.value)\n  }\n  const addNewList = async () => {\n    await axios.post(\n      `https://api.trello.com/1/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${newList}&idBoard=${id}`\n    )\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n    `)\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    setListData(response.data)\n    setCardData(card.data)\n  }\n  const setIdToDelete = async (listId) => {\n    await axios.put(\n      `https://api.trello.com/1/lists/${listId}/closed?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&value=true`\n    )\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `)\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    setListData(response.data)\n    setCardData(card.data)\n  }\n\n  return (\n    <div className=\"lists-container\">\n      <EditModal\n        activeModal={activeModal}\n        activeEditModal={activeEditModal}\n        cardNewId={cardNewId}\n        onsubmit={onsubmit}\n        onHandleChange={onHandleChange}\n      ></EditModal>\n\n      {listData ? (\n        listData.map((item) => {\n          return (\n            <div className=\"list\" key={item.id}>\n              <div className=\"header\">\n                <h3 className=\"list-title\" data-testid=\"listName\">\n                  {item.name}\n                </h3>\n                <span\n                  className=\"fa fa-times times-btn\"\n                  data-testid=\"delete\"\n                  onClick={() => setIdToDelete(item.id)}\n                ></span>\n              </div>\n\n              <ul className=\"list-items\">\n                {cardData.map((card) => {\n                  if (card.idList === item.id) {\n                    return (\n                      <li className=\"inner-cards\" key={card.id}>\n                        {card.name}\n                        <div className=\"edit-delete\">\n                          <span\n                            className=\"fa fa-trash trash-icon\"\n                            onClick={() => deleteCard(card.id)}\n                          ></span>\n                          <span\n                            className=\"fa fa-pencil\"\n                            onClick={() => multipleFunction(card.id)}\n                          ></span>\n                        </div>\n                      </li>\n                    )\n                  } else {\n                    return ''\n                  }\n                })}\n              </ul>\n              <input\n                type=\"text\"\n                placeholder=\"  type Card Name....\"\n                className=\"create-card\"\n                onChange={handleChange}\n              ></input>\n              <button\n                className=\"add-card-btn \"\n                data-testid=\"create-btn\"\n                onClick={() => createCard(item.id)}\n              >\n                Add a Card\n              </button>\n            </div>\n          )\n        })\n      ) : (\n        <div data-testid=\"loading-list\">..loading</div>\n      )}\n\n      <div className=\"create-list\">\n        <input\n          type=\"text\"\n          className=\"create-list-input\"\n          placeholder=\"   type list name \"\n          onChange={creatingNewList}\n        ></input>\n        <button>\n          <div\n            className=\"create-list-btn\"\n            onClick={addNewList}\n            data-testid=\"createList\"\n          >\n            Create New List <span className=\"fa fa-plus\"></span>\n          </div>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}