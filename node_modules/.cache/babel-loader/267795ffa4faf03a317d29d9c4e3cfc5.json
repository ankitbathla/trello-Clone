{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/EditModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport modalImage from './modalImage.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditModal(props) {\n  _s();\n\n  const [inputText, setInputText] = useState();\n  useEffect(() => {\n    setInputText(props.value);\n  });\n\n  const change = e => {\n    e.preventDefault();\n\n    if (e !== undefined && e.target !== undefined) {\n      setInputText(e.target.value);\n    }\n\n    props.onHandleChange();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modalShowing-${props.activeModal}`,\n    style: {\n      opacity: '.9'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      style: {\n        backgroundImage: `url(${modalImage})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            \"data-testid\": \"cardName\",\n            style: {\n              color: '#fff',\n              fontWeight: '800',\n              fontSize: '1.5em'\n            },\n            children: \"New CardName:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-icon\",\n          onClick: props.activeEditModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [console.log(props.value), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"boardName\",\n          placeholder: \"Card Name...\",\n          \"data-testid\": \"changeName\",\n          id: \"changeCardName\",\n          defaultValue: inputText,\n          onChange: change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          \"data-testid\": \"edit-name\",\n          onClick: props.onsubmit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditModal, \"mjzw3pc0e/8c9o/NGRwaVn/GcsQ=\");\n\n_c = EditModal;\nEditModal.propTypes = {\n  activeModal: PropTypes.bool.isRequired,\n  activeEditModal: PropTypes.func.isRequired,\n  cardNewId: PropTypes.string.isRequired,\n  onHandleChange: PropTypes.func.isRequired,\n  onsubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n};\nexport default EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/EditModal.js"],"names":["React","useEffect","useState","PropTypes","modalImage","EditModal","props","inputText","setInputText","value","change","e","preventDefault","undefined","target","onHandleChange","activeModal","opacity","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","color","fontWeight","fontSize","activeEditModal","console","log","onsubmit","propTypes","bool","isRequired","func","cardNewId","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport modalImage from './modalImage.jpeg'\n\nfunction EditModal(props) {\n  const [inputText, setInputText] = useState()\n  useEffect(() => {\n    setInputText(props.value)\n  })\n  const change = (e) => {\n    e.preventDefault()\n    if (e !== undefined && e.target !== undefined) {\n      setInputText(e.target.value)\n    }\n    props.onHandleChange()\n  }\n  return (\n    <div\n      className={`modalShowing-${props.activeModal}`}\n      style={{ opacity: '.9' }}\n    >\n      <div\n        className=\"modal-content\"\n        style={{\n          backgroundImage: `url(${modalImage})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat'\n        }}\n      >\n        <div className=\"header\">\n          <label className=\"label\">\n            <strong\n              data-testid=\"cardName\"\n              style={{ color: '#fff', fontWeight: '800', fontSize: '1.5em' }}\n            >\n              New CardName:\n            </strong>\n          </label>\n          <span className=\"close-icon\" onClick={props.activeEditModal}>\n            &times;\n          </span>\n        </div>\n        <div className=\"footer\">\n          {console.log(props.value)}\n          <input\n            type=\"text\"\n            className=\"boardName\"\n            placeholder=\"Card Name...\"\n            data-testid=\"changeName\"\n            id=\"changeCardName\"\n            defaultValue={inputText}\n            onChange={change}\n          ></input>\n        </div>\n        <div>\n          <button\n            className=\"btn\"\n            data-testid=\"edit-name\"\n            onClick={props.onsubmit}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\nEditModal.propTypes = {\n  activeModal: PropTypes.bool.isRequired,\n  activeEditModal: PropTypes.func.isRequired,\n  cardNewId: PropTypes.string.isRequired,\n  onHandleChange: PropTypes.func.isRequired,\n  onsubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n}\n\nexport default EditModal\n"]},"metadata":{},"sourceType":"module"}