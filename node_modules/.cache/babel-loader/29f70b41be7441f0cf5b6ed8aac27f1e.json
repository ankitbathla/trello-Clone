{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  const [listData, setListData] = useState([]);\n  const [loadingList, setLoadingList] = useState(true);\n  const [cardData, setCardData] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      const data = async () => {\n        const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `);\n        const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n        console.log('cards ', card.data);\n        console.log(response.data);\n        setListData(response.data);\n        setCardData(card.data);\n        setLoadingList(false);\n      };\n\n      data();\n    }\n  }, []);\n\n  const deleteCard = async idItem => {\n    console.log(id);\n    await axios.delete(`https://api.trello.com/1/cards/${idItem}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    window.location.reload();\n  };\n\n  const createCard = async (idItem, name) => {\n    await axios.post(`https://api.trello.com/1/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&idList=${idItem}&name=${name}`);\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lists-container\",\n    children: !loadingList ? listData.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"list-title\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-items\",\n          children: cardData.map(card => {\n            if (card.idList === item.id) {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"inner-cards\",\n                children: [card.name, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit-delete\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fa fa-trash trash-icon\",\n                    onClick: () => deleteCard(card.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fa fa-pencil\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 27\n                }, this)]\n              }, card.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this);\n            } else {\n              return '';\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-card-btn \",\n          onClick: () => createCard(item.id, 'ankit'),\n          children: \"Add a Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this);\n    }) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"HilOa9zjC91lA/ApIfgNEJ+RN6Y=\", false, function () {\n  return [useParams];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js"],"names":["React","useEffect","useState","useParams","axios","List","props","listData","setListData","loadingList","setLoadingList","cardData","setCardData","id","data","response","get","card","console","log","deleteCard","idItem","delete","window","location","reload","createCard","name","post","map","item","idList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAASV,SAAS,EAAxB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,EAAJ,EAAQ;AACN,YAAMC,IAAI,GAAG,YAAY;AACvB,cAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,mCAAkCH,EAAG;AAC/E,SAD+B,CAAvB;AAEA,cAAMI,IAAI,GAAG,MAAMb,KAAK,CAACY,GAAN,CAChB,mCAAkCH,EAAG,oHADrB,CAAnB;AAGAK,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAI,CAACH,IAA3B;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACD,IAArB;AACAN,QAAAA,WAAW,CAACO,QAAQ,CAACD,IAAV,CAAX;AACAF,QAAAA,WAAW,CAACK,IAAI,CAACH,IAAN,CAAX;AACAJ,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD,OAXD;;AAYAI,MAAAA,IAAI;AACL;AACF,GAhBQ,EAgBN,EAhBM,CAAT;;AAiBA,QAAMM,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACnCH,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AACA,UAAMT,KAAK,CAACkB,MAAN,CACH,kCAAiCD,MAAO,8GADrC,CAAN;AAGAE,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAND;;AAOA,QAAMC,UAAU,GAAG,OAAOL,MAAP,EAAeM,IAAf,KAAwB;AACzC,UAAMvB,KAAK,CAACwB,IAAN,CACH,qJAAoJP,MAAO,SAAQM,IAAK,EADrK,CAAN;AAGAJ,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GALD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,cACG,CAAChB,WAAD,GACGF,QAAQ,CAACsB,GAAT,CAAcC,IAAD,IAAU;AACrB,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BA,IAAI,CAACH;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBACGhB,QAAQ,CAACkB,GAAT,CAAcZ,IAAD,IAAU;AACtB,gBAAIA,IAAI,CAACc,MAAL,KAAgBD,IAAI,CAACjB,EAAzB,EAA6B;AAC3B,kCACE;AAAI,gBAAA,SAAS,EAAC,aAAd;AAAA,2BACGI,IAAI,CAACU,IADR,eAEE;AAAK,kBAAA,SAAS,EAAC,aAAf;AAAA,0CACE;AACE,oBAAA,SAAS,EAAC,wBADZ;AAEE,oBAAA,OAAO,EAAE,MAAMP,UAAU,CAACH,IAAI,CAACJ,EAAN;AAF3B;AAAA;AAAA;AAAA;AAAA,0BADF,eAKE;AAAM,oBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,0BALF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA,iBAAiCI,IAAI,CAACJ,EAAtC;AAAA;AAAA;AAAA;AAAA,sBADF;AAYD,aAbD,MAaO;AACL,qBAAO,EAAP;AACD;AACF,WAjBA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF,eAsBE;AACE,UAAA,SAAS,EAAC,eADZ;AAEE,UAAA,OAAO,EAAE,MAAMa,UAAU,CAACI,IAAI,CAACjB,EAAN,EAAU,OAAV,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA,SAA2BiB,IAAI,CAACjB,EAAhC;AAAA;AAAA;AAAA;AAAA,cADF;AA+BD,KAhCD,CADH,GAkCG;AAnCN;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GA1EQR,I;UAIQF,S;;;KAJRE,I;AA2ET,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\n\nfunction List(props) {\n  const [listData, setListData] = useState([])\n  const [loadingList, setLoadingList] = useState(true)\n  const [cardData, setCardData] = useState([])\n  const { id } = useParams()\n  useEffect(() => {\n    if (id) {\n      const data = async () => {\n        const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `)\n        const card = await axios.get(\n          `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n        )\n        console.log('cards ', card.data)\n        console.log(response.data)\n        setListData(response.data)\n        setCardData(card.data)\n        setLoadingList(false)\n      }\n      data()\n    }\n  }, [])\n  const deleteCard = async (idItem) => {\n    console.log(id)\n    await axios.delete(\n      `https://api.trello.com/1/cards/${idItem}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    window.location.reload()\n  }\n  const createCard = async (idItem, name) => {\n    await axios.post(\n      `https://api.trello.com/1/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&idList=${idItem}&name=${name}`\n    )\n    window.location.reload()\n  }\n  return (\n    <div className=\"lists-container\">\n      {!loadingList\n        ? listData.map((item) => {\n            return (\n              <div className=\"list\" key={item.id}>\n                <h3 className=\"list-title\">{item.name}</h3>\n                <ul className=\"list-items\">\n                  {cardData.map((card) => {\n                    if (card.idList === item.id) {\n                      return (\n                        <li className=\"inner-cards\" key={card.id}>\n                          {card.name}\n                          <div className=\"edit-delete\">\n                            <span\n                              className=\"fa fa-trash trash-icon\"\n                              onClick={() => deleteCard(card.id)}\n                            ></span>\n                            <span className=\"fa fa-pencil\"></span>\n                          </div>\n                        </li>\n                      )\n                    } else {\n                      return ''\n                    }\n                  })}\n                </ul>\n                <button\n                  className=\"add-card-btn \"\n                  onClick={() => createCard(item.id, 'ankit')}\n                >\n                  Add a Card\n                </button>\n              </div>\n            )\n          })\n        : ''}\n    </div>\n  )\n}\nexport default List\n"]},"metadata":{},"sourceType":"module"}