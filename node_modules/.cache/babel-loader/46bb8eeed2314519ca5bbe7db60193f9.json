{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport EditModal from './EditModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  _s();\n\n  const [listData, setListData] = useState();\n  const [cardData, setCardData] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [inputText, setInputText] = useState();\n  const [activeModal, setActiveModal] = useState(false);\n  const [cardNewId, setCardId] = useState();\n  const [name, setName] = useState();\n  const [newList, setNewList] = useState();\n  const [onChangeId, setONChangeId] = useState();\n  const [board, setBoard] = useState(null);\n\n  const onHandleChange = e => {\n    setName(e.target.value);\n  };\n\n  useEffect(() => {\n    const data = async () => {\n      const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `);\n      const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n      const board = await axios.get(`https://api.trello.com/1/boards/${id}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n\n      if (response) {\n        setListData(response.data);\n      }\n\n      if (card) {\n        setCardData(card.data);\n      }\n\n      if (board) {\n        console.log(board.data);\n        setBoard(board.data);\n      }\n    };\n\n    data();\n  }, []);\n\n  const deleteCard = async idItem => {\n    await axios.delete(`https://api.trello.com/1/cards/${idItem}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    setCardData(card.data);\n  };\n\n  const createCard = async idItem => {\n    if (inputText !== undefined && inputText !== '' && idItem === onChangeId) {\n      await axios.post(`https://api.trello.com/1/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&idList=${idItem}&name=${inputText}`);\n      const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n      setCardData(card.data);\n      setInputText('');\n    }\n  };\n\n  const multipleFunction = cardId => {\n    activeEditModal();\n    setCardId(cardId);\n  };\n\n  const handleChange = (e, ItemId) => {\n    setInputText(e.target.value);\n    setONChangeId(ItemId);\n  };\n\n  const activeEditModal = () => {\n    setActiveModal(!activeModal);\n  };\n\n  const onsubmit = async () => {\n    await axios.put(`https://api.trello.com/1/cards/${cardNewId}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${name}`);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    setCardData(card.data);\n    activeEditModal();\n  };\n\n  const creatingNewList = e => {\n    setNewList(e.target.value);\n  };\n\n  const addNewList = async () => {\n    await axios.post(`https://api.trello.com/1/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${newList}&idBoard=${id}`);\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n    `);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    setListData(response.data);\n    setCardData(card.data);\n  };\n\n  const setIdToDelete = async listId => {\n    await axios.put(`https://api.trello.com/1/lists/${listId}/closed?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&value=true`);\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    setListData(response.data);\n    setCardData(card.data);\n  };\n\n  return {\n    board: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lists-container\",\n        children: [/*#__PURE__*/_jsxDEV(EditModal, {\n          activeModal: activeModal,\n          activeEditModal: activeEditModal,\n          cardNewId: cardNewId,\n          onsubmit: onsubmit,\n          onHandleChange: onHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), listData ? listData.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"list-title\",\n                \"data-testid\": \"listName\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fa fa-times times-btn\",\n                \"data-testid\": \"delete\",\n                onClick: () => setIdToDelete(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-items\",\n              children: cardData.map(card => {\n                if (card.idList === item.id) {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"inner-cards\",\n                    \"data-testid\": \"card-Name\",\n                    children: [card.name, /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"edit-delete\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"fa fa-trash trash-icon\",\n                        \"data-testid\": \"delete-card\",\n                        onClick: () => deleteCard(card.id)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"fa fa-pencil\",\n                        \"data-testid\": \"edit\",\n                        onClick: () => multipleFunction(card.id)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 29\n                    }, this)]\n                  }, card.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 27\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    \"data-testid\": \"noCard\",\n                    children: ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 32\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"  type Card Name....\",\n              className: \"create-card\",\n              \"data-testid\": \"addCard\",\n              onChange: e => handleChange(e, item.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-card-btn \",\n              \"data-testid\": \"create-btn\",\n              onClick: () => createCard(item.id),\n              children: \"Add a Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"loading-list\",\n          children: \"..loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"create-list-input\",\n            placeholder: \"   type list name \",\n            \"data-testid\": \"newList\",\n            onChange: creatingNewList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-list-btn\",\n              onClick: addNewList,\n              \"data-testid\": \"createList\",\n              children: [\"Create New List \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fa fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  };\n}\n\n_s(List, \"vmAPn1WiUSZSy3wc9uMXMNpkHDI=\", false, function () {\n  return [useParams];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js"],"names":["React","useEffect","useState","useParams","axios","EditModal","List","listData","setListData","cardData","setCardData","id","inputText","setInputText","activeModal","setActiveModal","cardNewId","setCardId","name","setName","newList","setNewList","onChangeId","setONChangeId","board","setBoard","onHandleChange","e","target","value","data","response","get","card","console","log","deleteCard","idItem","delete","createCard","undefined","post","multipleFunction","cardId","activeEditModal","handleChange","ItemId","onsubmit","put","creatingNewList","addNewList","setIdToDelete","listId","map","item","idList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,EAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAES,IAAAA;AAAF,MAASR,SAAS,EAAxB;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACc,SAAD,EAAYC,SAAZ,IAAyBf,QAAQ,EAAvC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,EAAhC;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,EAAtC;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,EAA5C;AACA,QAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMwB,cAAc,GAAIC,CAAD,IAAO;AAC5BR,IAAAA,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAGA5B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6B,IAAI,GAAG,YAAY;AACvB,YAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAN,CAAW,mCAAkCrB,EAAG;AAC7E,SAD6B,CAAvB;AAEA,YAAMsB,IAAI,GAAG,MAAM7B,KAAK,CAAC4B,GAAN,CAChB,mCAAkCrB,EAAG,oHADrB,CAAnB;AAIA,YAAMa,KAAK,GAAG,MAAMpB,KAAK,CAAC4B,GAAN,CACjB,mCAAkCrB,EAAG,8GADpB,CAApB;;AAGA,UAAIoB,QAAJ,EAAc;AACZvB,QAAAA,WAAW,CAACuB,QAAQ,CAACD,IAAV,CAAX;AACD;;AACD,UAAIG,IAAJ,EAAU;AACRvB,QAAAA,WAAW,CAACuB,IAAI,CAACH,IAAN,CAAX;AACD;;AACD,UAAIN,KAAJ,EAAW;AACTU,QAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACM,IAAlB;AACAL,QAAAA,QAAQ,CAACD,KAAK,CAACM,IAAP,CAAR;AACD;AACF,KApBD;;AAqBAA,IAAAA,IAAI;AACL,GAvBQ,EAuBN,EAvBM,CAAT;;AAwBA,QAAMM,UAAU,GAAG,MAAOC,MAAP,IAAkB;AACnC,UAAMjC,KAAK,CAACkC,MAAN,CACH,kCAAiCD,MAAO,8GADrC,CAAN;AAIA,UAAMJ,IAAI,GAAG,MAAM7B,KAAK,CAAC4B,GAAN,CAChB,mCAAkCrB,EAAG,oHADrB,CAAnB;AAGAD,IAAAA,WAAW,CAACuB,IAAI,CAACH,IAAN,CAAX;AACD,GATD;;AAUA,QAAMS,UAAU,GAAG,MAAOF,MAAP,IAAkB;AACnC,QAAIzB,SAAS,KAAK4B,SAAd,IAA2B5B,SAAS,KAAK,EAAzC,IAA+CyB,MAAM,KAAKf,UAA9D,EAA0E;AACxE,YAAMlB,KAAK,CAACqC,IAAN,CACH,qJAAoJJ,MAAO,SAAQzB,SAAU,EAD1K,CAAN;AAGA,YAAMqB,IAAI,GAAG,MAAM7B,KAAK,CAAC4B,GAAN,CAChB,mCAAkCrB,EAAG,oHADrB,CAAnB;AAGAD,MAAAA,WAAW,CAACuB,IAAI,CAACH,IAAN,CAAX;AACAjB,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,GAXD;;AAYA,QAAM6B,gBAAgB,GAAIC,MAAD,IAAY;AACnCC,IAAAA,eAAe;AACf3B,IAAAA,SAAS,CAAC0B,MAAD,CAAT;AACD,GAHD;;AAKA,QAAME,YAAY,GAAG,CAAClB,CAAD,EAAImB,MAAJ,KAAe;AAClCjC,IAAAA,YAAY,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACAN,IAAAA,aAAa,CAACuB,MAAD,CAAb;AACD,GAHD;;AAIA,QAAMF,eAAe,GAAG,MAAM;AAC5B7B,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GAFD;;AAGA,QAAMiC,QAAQ,GAAG,YAAY;AAC3B,UAAM3C,KAAK,CAAC4C,GAAN,CACH,kCAAiChC,SAAU,qHAAoHE,IAAK,EADjK,CAAN;AAIA,UAAMe,IAAI,GAAG,MAAM7B,KAAK,CAAC4B,GAAN,CAChB,mCAAkCrB,EAAG,oHADrB,CAAnB;AAGAD,IAAAA,WAAW,CAACuB,IAAI,CAACH,IAAN,CAAX;AACAc,IAAAA,eAAe;AAChB,GAVD;;AAWA,QAAMK,eAAe,GAAItB,CAAD,IAAO;AAC7BN,IAAAA,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAGA,QAAMqB,UAAU,GAAG,YAAY;AAC7B,UAAM9C,KAAK,CAACqC,IAAN,CACH,mJAAkJrB,OAAQ,YAAWT,EAAG,EADrK,CAAN;AAGA,UAAMoB,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAN,CAAW,mCAAkCrB,EAAG;AAC3E,KAD2B,CAAvB;AAEA,UAAMsB,IAAI,GAAG,MAAM7B,KAAK,CAAC4B,GAAN,CAChB,mCAAkCrB,EAAG,oHADrB,CAAnB;AAGAH,IAAAA,WAAW,CAACuB,QAAQ,CAACD,IAAV,CAAX;AACApB,IAAAA,WAAW,CAACuB,IAAI,CAACH,IAAN,CAAX;AACD,GAXD;;AAYA,QAAMqB,aAAa,GAAG,MAAOC,MAAP,IAAkB;AACtC,UAAMhD,KAAK,CAAC4C,GAAN,CACH,kCAAiCI,MAAO,gIADrC,CAAN;AAGA,UAAMrB,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAN,CAAW,mCAAkCrB,EAAG;AAC3E,SAD2B,CAAvB;AAEA,UAAMsB,IAAI,GAAG,MAAM7B,KAAK,CAAC4B,GAAN,CAChB,mCAAkCrB,EAAG,oHADrB,CAAnB;AAIAH,IAAAA,WAAW,CAACuB,QAAQ,CAACD,IAAV,CAAX;AAEApB,IAAAA,WAAW,CAACuB,IAAI,CAACH,IAAN,CAAX;AACD,GAbD;;AAcA,SAAO;AACLN,IAAAA,KAAK,eACH;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,WAAW,EAAEV,WADf;AAEE,UAAA,eAAe,EAAE8B,eAFnB;AAGE,UAAA,SAAS,EAAE5B,SAHb;AAIE,UAAA,QAAQ,EAAE+B,QAJZ;AAKE,UAAA,cAAc,EAAErB;AALlB;AAAA;AAAA;AAAA;AAAA,gBADF,EASGnB,QAAQ,GACPA,QAAQ,CAAC8C,GAAT,CAAcC,IAAD,IAAU;AACrB,8BACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,sCACE;AAAI,gBAAA,SAAS,EAAC,YAAd;AAA2B,+BAAY,UAAvC;AAAA,0BACGA,IAAI,CAACpC;AADR;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AACE,gBAAA,SAAS,EAAC,uBADZ;AAEE,+BAAY,QAFd;AAGE,gBAAA,OAAO,EAAE,MAAMiC,aAAa,CAACG,IAAI,CAAC3C,EAAN;AAH9B;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBACGF,QAAQ,CAAC4C,GAAT,CAAcpB,IAAD,IAAU;AACtB,oBAAIA,IAAI,CAACsB,MAAL,KAAgBD,IAAI,CAAC3C,EAAzB,EAA6B;AAC3B,sCACE;AACE,oBAAA,SAAS,EAAC,aADZ;AAGE,mCAAY,WAHd;AAAA,+BAKGsB,IAAI,CAACf,IALR,eAME;AAAK,sBAAA,SAAS,EAAC,aAAf;AAAA,8CACE;AACE,wBAAA,SAAS,EAAC,wBADZ;AAEE,uCAAY,aAFd;AAGE,wBAAA,OAAO,EAAE,MAAMkB,UAAU,CAACH,IAAI,CAACtB,EAAN;AAH3B;AAAA;AAAA;AAAA;AAAA,8BADF,eAME;AACE,wBAAA,SAAS,EAAC,cADZ;AAEE,uCAAY,MAFd;AAGE,wBAAA,OAAO,EAAE,MAAM+B,gBAAgB,CAACT,IAAI,CAACtB,EAAN;AAHjC;AAAA;AAAA;AAAA;AAAA,8BANF;AAAA;AAAA;AAAA;AAAA;AAAA,4BANF;AAAA,qBAEOsB,IAAI,CAACtB,EAFZ;AAAA;AAAA;AAAA;AAAA,0BADF;AAqBD,iBAtBD,MAsBO;AACL,sCAAO;AAAK,mCAAY,QAAjB;AAAA,8BAA2B;AAA3B;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD;AACF,eA1BA;AADH;AAAA;AAAA;AAAA;AAAA,oBAZF,eAyCE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,sBAFd;AAGE,cAAA,SAAS,EAAC,aAHZ;AAIE,6BAAY,SAJd;AAKE,cAAA,QAAQ,EAAGgB,CAAD,IAAOkB,YAAY,CAAClB,CAAD,EAAI2B,IAAI,CAAC3C,EAAT;AAL/B;AAAA;AAAA;AAAA;AAAA,oBAzCF,eAgDE;AACE,cAAA,SAAS,EAAC,eADZ;AAEE,6BAAY,YAFd;AAGE,cAAA,OAAO,EAAE,MAAM4B,UAAU,CAACe,IAAI,CAAC3C,EAAN,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhDF;AAAA,aAA2B2C,IAAI,CAAC3C,EAAhC;AAAA;AAAA;AAAA;AAAA,kBADF;AA0DD,SA3DD,CADO,gBA8DP;AAAK,yBAAY,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvEJ,eA0EE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,mBAFZ;AAGE,YAAA,WAAW,EAAC,oBAHd;AAIE,2BAAY,SAJd;AAKE,YAAA,QAAQ,EAAEsC;AALZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,iBADZ;AAEE,cAAA,OAAO,EAAEC,UAFX;AAGE,6BAAY,YAHd;AAAA,0DAKkB;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1EF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFG,GAAP;AAmGD;;GApNQ5C,I;UAGQH,S;;;KAHRG,I;AAsNT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport EditModal from './EditModal'\n\nfunction List() {\n  const [listData, setListData] = useState()\n  const [cardData, setCardData] = useState([])\n  const { id } = useParams()\n  const [inputText, setInputText] = useState()\n  const [activeModal, setActiveModal] = useState(false)\n  const [cardNewId, setCardId] = useState()\n  const [name, setName] = useState()\n  const [newList, setNewList] = useState()\n  const [onChangeId, setONChangeId] = useState()\n  const [board, setBoard] = useState(null)\n\n  const onHandleChange = (e) => {\n    setName(e.target.value)\n  }\n  useEffect(() => {\n    const data = async () => {\n      const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `)\n      const card = await axios.get(\n        `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n      )\n\n      const board = await axios.get(\n        `https://api.trello.com/1/boards/${id}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n      )\n      if (response) {\n        setListData(response.data)\n      }\n      if (card) {\n        setCardData(card.data)\n      }\n      if (board) {\n        console.log(board.data)\n        setBoard(board.data)\n      }\n    }\n    data()\n  }, [])\n  const deleteCard = async (idItem) => {\n    await axios.delete(\n      `https://api.trello.com/1/cards/${idItem}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    setCardData(card.data)\n  }\n  const createCard = async (idItem) => {\n    if (inputText !== undefined && inputText !== '' && idItem === onChangeId) {\n      await axios.post(\n        `https://api.trello.com/1/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&idList=${idItem}&name=${inputText}`\n      )\n      const card = await axios.get(\n        `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n      )\n      setCardData(card.data)\n      setInputText('')\n    }\n  }\n  const multipleFunction = (cardId) => {\n    activeEditModal()\n    setCardId(cardId)\n  }\n\n  const handleChange = (e, ItemId) => {\n    setInputText(e.target.value)\n    setONChangeId(ItemId)\n  }\n  const activeEditModal = () => {\n    setActiveModal(!activeModal)\n  }\n  const onsubmit = async () => {\n    await axios.put(\n      `https://api.trello.com/1/cards/${cardNewId}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${name}`\n    )\n\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    setCardData(card.data)\n    activeEditModal()\n  }\n  const creatingNewList = (e) => {\n    setNewList(e.target.value)\n  }\n  const addNewList = async () => {\n    await axios.post(\n      `https://api.trello.com/1/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${newList}&idBoard=${id}`\n    )\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n    `)\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    setListData(response.data)\n    setCardData(card.data)\n  }\n  const setIdToDelete = async (listId) => {\n    await axios.put(\n      `https://api.trello.com/1/lists/${listId}/closed?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&value=true`\n    )\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `)\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n\n    setListData(response.data)\n\n    setCardData(card.data)\n  }\n  return {\n    board: (\n      <div>\n        <div className=\"lists-container\">\n          <EditModal\n            activeModal={activeModal}\n            activeEditModal={activeEditModal}\n            cardNewId={cardNewId}\n            onsubmit={onsubmit}\n            onHandleChange={onHandleChange}\n          ></EditModal>\n\n          {listData ? (\n            listData.map((item) => {\n              return (\n                <div className=\"list\" key={item.id}>\n                  <div className=\"header\">\n                    <h3 className=\"list-title\" data-testid=\"listName\">\n                      {item.name}\n                    </h3>\n                    <span\n                      className=\"fa fa-times times-btn\"\n                      data-testid=\"delete\"\n                      onClick={() => setIdToDelete(item.id)}\n                    ></span>\n                  </div>\n\n                  <ul className=\"list-items\">\n                    {cardData.map((card) => {\n                      if (card.idList === item.id) {\n                        return (\n                          <li\n                            className=\"inner-cards\"\n                            key={card.id}\n                            data-testid=\"card-Name\"\n                          >\n                            {card.name}\n                            <div className=\"edit-delete\">\n                              <span\n                                className=\"fa fa-trash trash-icon\"\n                                data-testid=\"delete-card\"\n                                onClick={() => deleteCard(card.id)}\n                              ></span>\n                              <span\n                                className=\"fa fa-pencil\"\n                                data-testid=\"edit\"\n                                onClick={() => multipleFunction(card.id)}\n                              ></span>\n                            </div>\n                          </li>\n                        )\n                      } else {\n                        return <div data-testid=\"noCard\">{''}</div>\n                      }\n                    })}\n                  </ul>\n                  <input\n                    type=\"text\"\n                    placeholder=\"  type Card Name....\"\n                    className=\"create-card\"\n                    data-testid=\"addCard\"\n                    onChange={(e) => handleChange(e, item.id)}\n                  ></input>\n                  <button\n                    className=\"add-card-btn \"\n                    data-testid=\"create-btn\"\n                    onClick={() => createCard(item.id)}\n                  >\n                    Add a Card\n                  </button>\n                </div>\n              )\n            })\n          ) : (\n            <div data-testid=\"loading-list\">..loading</div>\n          )}\n\n          <div className=\"create-list\">\n            <input\n              type=\"text\"\n              className=\"create-list-input\"\n              placeholder=\"   type list name \"\n              data-testid=\"newList\"\n              onChange={creatingNewList}\n            ></input>\n            <button>\n              <div\n                className=\"create-list-btn\"\n                onClick={addNewList}\n                data-testid=\"createList\"\n              >\n                Create New List <span className=\"fa fa-plus\"></span>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}