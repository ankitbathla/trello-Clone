{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  _s();\n\n  const [listData, setListData] = useState([]);\n  const [loadingList, setLoadingList] = useState(true);\n  const [cardData, setCardData] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [inputText, setInputText] = useState();\n  useEffect(() => {\n    if (id) {\n      const data = async () => {\n        const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `);\n        const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n        console.log('cards ', card.data);\n        console.log(response.data);\n        setListData(response.data);\n        setCardData(card.data);\n        setLoadingList(false);\n      };\n\n      data();\n    }\n  }, []);\n\n  const deleteCard = async idItem => {\n    await axios.delete(`https://api.trello.com/1/cards/${idItem}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    console.log('cards ', card.data);\n    setCardData(card.data);\n    setLoadingList(false);\n  };\n\n  const createCard = async idItem => {\n    if (inputText !== '') {\n      await axios.post(`https://api.trello.com/1/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&idList=${idItem}&name=${inputText}`);\n      const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n      console.log('cards ', card.data);\n      setCardData(card.data);\n      setLoadingList(false);\n    }\n  };\n\n  const handleChange = e => {\n    setInputText(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lists-container\",\n    children: [!loadingList ? listData.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"list-title\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-items\",\n          children: cardData.map(card => {\n            if (card.idList === item.id) {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"inner-cards\",\n                children: [card.name, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit-delete\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fa fa-trash trash-icon\",\n                    onClick: () => deleteCard(card.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fa fa-pencil\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 27\n                }, this)]\n              }, card.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 25\n              }, this);\n            } else {\n              return '';\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Card Name....\",\n          className: \"create-card\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-card-btn \",\n          onClick: () => createCard(item.id),\n          children: \"Add a Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this);\n    }) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardName\",\n        children: \"Create New List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"y74v0f/2Ldd0uQGJ2Q8I76WCd1s=\", false, function () {\n  return [useParams];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js"],"names":["React","useEffect","useState","useParams","axios","List","listData","setListData","loadingList","setLoadingList","cardData","setCardData","id","inputText","setInputText","data","response","get","card","console","log","deleteCard","idItem","delete","createCard","post","handleChange","e","target","value","map","item","name","idList"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\n\nfunction List() {\n  const [listData, setListData] = useState([])\n  const [loadingList, setLoadingList] = useState(true)\n  const [cardData, setCardData] = useState([])\n  const { id } = useParams()\n  const [inputText, setInputText] = useState()\n  useEffect(() => {\n    if (id) {\n      const data = async () => {\n        const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `)\n        const card = await axios.get(\n          `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n        )\n        console.log('cards ', card.data)\n        console.log(response.data)\n        setListData(response.data)\n        setCardData(card.data)\n        setLoadingList(false)\n      }\n      data()\n    }\n  }, [])\n  const deleteCard = async (idItem) => {\n    await axios.delete(\n      `https://api.trello.com/1/cards/${idItem}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    console.log('cards ', card.data)\n    setCardData(card.data)\n    setLoadingList(false)\n  }\n  const createCard = async (idItem) => {\n    if (inputText !== '') {\n      await axios.post(\n        `https://api.trello.com/1/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&idList=${idItem}&name=${inputText}`\n      )\n      const card = await axios.get(\n        `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n      )\n      console.log('cards ', card.data)\n      setCardData(card.data)\n      setLoadingList(false)\n    }\n  }\n  const handleChange = (e) => {\n    setInputText(e.target.value)\n  }\n  return (\n    <div className=\"lists-container\">\n      {!loadingList\n        ? listData.map((item) => {\n            return (\n              <div className=\"list\" key={item.id}>\n                <h3 className=\"list-title\">{item.name}</h3>\n                <ul className=\"list-items\">\n                  {cardData.map((card) => {\n                    if (card.idList === item.id) {\n                      return (\n                        <li className=\"inner-cards\" key={card.id}>\n                          {card.name}\n                          <div className=\"edit-delete\">\n                            <span\n                              className=\"fa fa-trash trash-icon\"\n                              onClick={() => deleteCard(card.id)}\n                            ></span>\n                            <span className=\"fa fa-pencil\"></span>\n                          </div>\n                        </li>\n                      )\n                    } else {\n                      return ''\n                    }\n                  })}\n                </ul>\n                <input\n                  type=\"text\"\n                  placeholder=\"Card Name....\"\n                  className=\"create-card\"\n                  onChange={handleChange}\n                ></input>\n                <button\n                  className=\"add-card-btn \"\n                  onClick={() => createCard(item.id)}\n                >\n                  Add a Card\n                </button>\n              </div>\n            )\n          })\n        : ''}\n      <div className=\"create-list\">\n        <div className=\"cardName\">Create New List</div>\n      </div>\n    </div>\n  )\n}\nexport default List\n"]},"metadata":{},"sourceType":"module"}