{"ast":null,"code":"var _jsxFileName = \"/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport EditModal from './EditModal';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  const [listData, setListData] = useState();\n  const [cardData, setCardData] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [inputText, setInputText] = useState('');\n  const [activeModal, setActiveModal] = useState(false);\n  const [cardNewId, setCardId] = useState();\n  const [name, setName] = useState();\n  const [newList, setNewList] = useState();\n  const [onChangeId, setONChangeId] = useState();\n  const [board, setBoard] = useState();\n  const [newBoardName, setNewBoardName] = useState(false);\n  const [BoardName, setBoardName] = useState();\n\n  const onHandleChange = e => {\n    setName(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log('inside useEffect', 'list');\n\n    const data = async () => {\n      const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `);\n      const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n      const board = await axios.get(`https://api.trello.com/1/boards/${id}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n\n      if (board && board.data) {\n        console.log(board.data, 'board');\n        setBoard(board.data);\n      }\n\n      if (response) {\n        setListData(response.data);\n        console.log(response.data, 'list');\n      }\n\n      if (card) {\n        setCardData(card.data);\n        console.log(card.data, 'card');\n      }\n    };\n\n    data();\n  }, []);\n\n  const deleteCard = async idItem => {\n    await axios.delete(`https://api.trello.com/1/cards/${idItem}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    setCardData(card.data);\n  };\n\n  const createCard = async idItem => {\n    if (inputText !== undefined && inputText !== '' && idItem === onChangeId) {\n      await axios.post(`https://api.trello.com/1/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&idList=${idItem}&name=${inputText}`);\n      const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n      setCardData(card.data);\n      document.getElementById(`card-${idItem}`).value = '';\n    }\n  };\n\n  const multipleFunction = async cardId => {\n    activeEditModal();\n    setCardId(cardId);\n  };\n\n  const handleChange = (e, ItemId) => {\n    e.preventDefault();\n    setInputText(e.target.value);\n    setONChangeId(ItemId);\n  };\n\n  const activeEditModal = () => {\n    setActiveModal(!activeModal);\n  };\n\n  const onsubmit = async () => {\n    document.getElementById('changeCardName').defaultValue = '';\n    await axios.put(`https://api.trello.com/1/cards/${cardNewId}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${name}`);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    setCardData(card.data);\n    activeEditModal();\n    console.log(document.getElementById('changeCardName').defaultValue);\n    document.getElementById('changeCardName').defaultValue = 'avvv';\n  };\n\n  const creatingNewList = e => {\n    setNewList(e.target.value);\n  };\n\n  const addNewList = async () => {\n    await axios.post(`https://api.trello.com/1/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${newList}&idBoard=${id}`);\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n    `);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    setListData(response.data);\n    setCardData(card.data);\n    document.getElementById('createList').value = '';\n  };\n\n  const setIdToDelete = async listId => {\n    await axios.put(`https://api.trello.com/1/lists/${listId}/closed?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&value=true`);\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    setListData(response.data);\n    setCardData(card.data);\n  };\n\n  const changeBoardName = () => {\n    setNewBoardName(!newBoardName);\n  };\n\n  const changeName = e => {\n    setBoardName(e.target.value);\n  };\n\n  const change = async () => {\n    axios.put(`https://api.trello.com/1/boards/${id}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${BoardName}`);\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n    `);\n    const card = await axios.get(`https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    const board = await axios.get(`https://api.trello.com/1/boards/${id}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`);\n    const responseAll = await axios.get('https://api.trello.com/1/members/me/boards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb');\n    setBoard(board.data);\n    setListData(response.data);\n    setCardData(card.data);\n    props.setData(responseAll.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aaa\",\n    children: board && board.prefs ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-heading\",\n      style: {\n        backgroundImage: 'url(' + board.prefs.backgroundImage + ')',\n        backgroundColor: board.prefs.backgroundColor,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        height: 'calc(100vh - 2em)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: changeBoardName,\n        id: \"board-name\",\n        \"data-testid\": \"onClickNewBoardName\",\n        className: `add-new-board-${newBoardName}`,\n        children: board.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `add-new-board-input-${newBoardName}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"new Board name...\",\n          className: \"search-input-new-board-name\",\n          \"data-testid\": \"onChangeNewBoardName\",\n          id: \"newBoardNameValue\",\n          onChange: changeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: change,\n          className: \"save-new-board-name\",\n          \"data-testid\": \"onClickSaveNewName\",\n          children: \"Save..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"fa fa-times cross-icon\",\n          \"data-testid\": \"closeSearch\",\n          onClick: changeBoardName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lists-container\",\n        children: [/*#__PURE__*/_jsxDEV(EditModal, {\n          activeModal: activeModal,\n          activeEditModal: activeEditModal,\n          cardNewId: cardNewId,\n          onsubmit: onsubmit,\n          onHandleChange: onHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), listData ? listData.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"list-title\",\n                \"data-testid\": \"listName\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fa fa-times times-btn\",\n                \"data-testid\": \"delete\",\n                onClick: () => setIdToDelete(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-items\",\n              children: cardData.map(card => {\n                if (card.idList === item.id) {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"inner-cards\",\n                    \"data-testid\": \"card-Name\",\n                    id: `name-${card.id}`,\n                    children: [card.name, /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"edit-delete\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"fa fa-trash trash-icon\",\n                        \"data-testid\": \"delete-card\",\n                        onClick: () => deleteCard(card.id)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"fa fa-pencil\",\n                        \"data-testid\": \"edit\",\n                        onClick: () => multipleFunction(card.id)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 31\n                    }, this)]\n                  }, card.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 29\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    \"data-testid\": \"noCard\",\n                    children: ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 34\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"  type Card Name....\",\n              className: \"create-card\",\n              \"data-testid\": \"addCard\",\n              id: `card-${item.id}`,\n              onChange: e => handleChange(e, item.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-card-btn \",\n              \"data-testid\": \"create-btn\",\n              onClick: () => createCard(item.id),\n              children: \"Add a Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"loading-list\",\n          children: \"..loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"create-list-input\",\n            placeholder: \"   type list name \",\n            \"data-testid\": \"newList\",\n            id: \"createList\",\n            onChange: creatingNewList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-list-btn\",\n              onClick: addNewList,\n              \"data-testid\": \"createList\",\n              children: [\"Create New List\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fa fa-plus plus-color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"vFBnatdNEYonZu5/FeImFUpmRiE=\", false, function () {\n  return [useParams];\n});\n\n_c = List;\nList.propTypes = {\n  setData: PropTypes.func.isRequired\n};\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/raramuri/Desktop/groot/ankit/react_tasks/src/Task2Components/List.js"],"names":["React","useEffect","useState","useParams","axios","EditModal","PropTypes","List","props","listData","setListData","cardData","setCardData","id","inputText","setInputText","activeModal","setActiveModal","cardNewId","setCardId","name","setName","newList","setNewList","onChangeId","setONChangeId","board","setBoard","newBoardName","setNewBoardName","BoardName","setBoardName","onHandleChange","e","target","value","console","log","data","response","get","card","deleteCard","idItem","delete","createCard","undefined","post","document","getElementById","multipleFunction","cardId","activeEditModal","handleChange","ItemId","preventDefault","onsubmit","defaultValue","put","creatingNewList","addNewList","setIdToDelete","listId","changeBoardName","changeName","change","responseAll","setData","prefs","backgroundImage","backgroundColor","backgroundPosition","backgroundSize","backgroundRepeat","height","map","item","idList","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport EditModal from './EditModal'\nimport PropTypes from 'prop-types'\nfunction List(props) {\n  const [listData, setListData] = useState()\n  const [cardData, setCardData] = useState([])\n  const { id } = useParams()\n  const [inputText, setInputText] = useState('')\n  const [activeModal, setActiveModal] = useState(false)\n  const [cardNewId, setCardId] = useState()\n  const [name, setName] = useState()\n  const [newList, setNewList] = useState()\n  const [onChangeId, setONChangeId] = useState()\n  const [board, setBoard] = useState()\n  const [newBoardName, setNewBoardName] = useState(false)\n  const [BoardName, setBoardName] = useState()\n\n  const onHandleChange = (e) => {\n    setName(e.target.value)\n  }\n  useEffect(() => {\n    console.log('inside useEffect', 'list')\n    const data = async () => {\n      const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `)\n      const card = await axios.get(\n        `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n      )\n\n      const board = await axios.get(\n        `https://api.trello.com/1/boards/${id}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n      )\n      if (board && board.data) {\n        console.log(board.data, 'board')\n        setBoard(board.data)\n      }\n      if (response) {\n        setListData(response.data)\n        console.log(response.data, 'list')\n      }\n      if (card) {\n        setCardData(card.data)\n        console.log(card.data, 'card')\n      }\n    }\n    data()\n  }, [])\n\n  const deleteCard = async (idItem) => {\n    await axios.delete(\n      `https://api.trello.com/1/cards/${idItem}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    setCardData(card.data)\n  }\n  const createCard = async (idItem) => {\n    if (inputText !== undefined && inputText !== '' && idItem === onChangeId) {\n      await axios.post(\n        `https://api.trello.com/1/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&idList=${idItem}&name=${inputText}`\n      )\n      const card = await axios.get(\n        `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n      )\n      setCardData(card.data)\n      document.getElementById(`card-${idItem}`).value = ''\n    }\n  }\n  const multipleFunction = async (cardId) => {\n    activeEditModal()\n    setCardId(cardId)\n  }\n\n  const handleChange = (e, ItemId) => {\n    e.preventDefault()\n    setInputText(e.target.value)\n    setONChangeId(ItemId)\n  }\n  const activeEditModal = () => {\n    setActiveModal(!activeModal)\n  }\n  const onsubmit = async () => {\n    document.getElementById('changeCardName').defaultValue = ''\n    await axios.put(\n      `https://api.trello.com/1/cards/${cardNewId}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${name}`\n    )\n\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    setCardData(card.data)\n\n    activeEditModal()\n    console.log(document.getElementById('changeCardName').defaultValue)\n    document.getElementById('changeCardName').defaultValue = 'avvv'\n  }\n  const creatingNewList = (e) => {\n    setNewList(e.target.value)\n  }\n  const addNewList = async () => {\n    await axios.post(\n      `https://api.trello.com/1/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${newList}&idBoard=${id}`\n    )\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n    `)\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    setListData(response.data)\n    setCardData(card.data)\n    document.getElementById('createList').value = ''\n  }\n  const setIdToDelete = async (listId) => {\n    await axios.put(\n      `https://api.trello.com/1/lists/${listId}/closed?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&value=true`\n    )\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n        `)\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n\n    setListData(response.data)\n\n    setCardData(card.data)\n  }\n  const changeBoardName = () => {\n    setNewBoardName(!newBoardName)\n  }\n  const changeName = (e) => {\n    setBoardName(e.target.value)\n  }\n  const change = async () => {\n    axios.put(\n      `https://api.trello.com/1/boards/${id}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb&name=${BoardName}`\n    )\n    const response = await axios.get(`https://api.trello.com/1/boards/${id}/lists?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb\n    `)\n    const card = await axios.get(\n      `https://api.trello.com/1/boards/${id}/cards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n\n    const board = await axios.get(\n      `https://api.trello.com/1/boards/${id}?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb`\n    )\n    const responseAll = await axios.get(\n      'https://api.trello.com/1/members/me/boards?key=d99233bea37b0025a58fa72dc607d4ff&token=e8c437e0e01d12dfdf3abcb5bf7fe9b8f62094009251fc654ff71d1607517edb'\n    )\n\n    setBoard(board.data)\n\n    setListData(response.data)\n\n    setCardData(card.data)\n    props.setData(responseAll.data)\n  }\n  return (\n    <div className=\"aaa\">\n      {board && board.prefs ? (\n        <div\n          className=\"board-heading\"\n          style={{\n            backgroundImage: 'url(' + board.prefs.backgroundImage + ')',\n            backgroundColor: board.prefs.backgroundColor,\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat',\n            height: 'calc(100vh - 2em)'\n          }}\n        >\n          <div\n            onClick={changeBoardName}\n            id=\"board-name\"\n            data-testid=\"onClickNewBoardName\"\n            className={`add-new-board-${newBoardName}`}\n          >\n            {board.name}\n          </div>\n          <div className={`add-new-board-input-${newBoardName}`}>\n            <input\n              type=\"text\"\n              placeholder=\"new Board name...\"\n              className=\"search-input-new-board-name\"\n              data-testid=\"onChangeNewBoardName\"\n              id=\"newBoardNameValue\"\n              onChange={changeName}\n            ></input>\n            <button\n              type=\"button\"\n              onClick={change}\n              className=\"save-new-board-name\"\n              data-testid=\"onClickSaveNewName\"\n            >\n              Save..\n            </button>\n            <span\n              className=\"fa fa-times cross-icon\"\n              data-testid=\"closeSearch\"\n              onClick={changeBoardName}\n            ></span>\n          </div>\n\n          <div className=\"lists-container\">\n            <EditModal\n              activeModal={activeModal}\n              activeEditModal={activeEditModal}\n              cardNewId={cardNewId}\n              onsubmit={onsubmit}\n              onHandleChange={onHandleChange}\n            ></EditModal>\n            {listData ? (\n              listData.map((item) => {\n                return (\n                  <div className=\"list\" key={item.id}>\n                    <div className=\"header\">\n                      <h3 className=\"list-title\" data-testid=\"listName\">\n                        {item.name}\n                      </h3>\n                      <span\n                        className=\"fa fa-times times-btn\"\n                        data-testid=\"delete\"\n                        onClick={() => setIdToDelete(item.id)}\n                      ></span>\n                    </div>\n\n                    <ul className=\"list-items\">\n                      {cardData.map((card) => {\n                        if (card.idList === item.id) {\n                          return (\n                            <li\n                              className=\"inner-cards\"\n                              key={card.id}\n                              data-testid=\"card-Name\"\n                              id={`name-${card.id}`}\n                            >\n                              {card.name}\n                              <div className=\"edit-delete\">\n                                <span\n                                  className=\"fa fa-trash trash-icon\"\n                                  data-testid=\"delete-card\"\n                                  onClick={() => deleteCard(card.id)}\n                                ></span>\n                                <span\n                                  className=\"fa fa-pencil\"\n                                  data-testid=\"edit\"\n                                  onClick={() => multipleFunction(card.id)}\n                                ></span>\n                              </div>\n                            </li>\n                          )\n                        } else {\n                          return <div data-testid=\"noCard\">{''}</div>\n                        }\n                      })}\n                    </ul>\n                    <input\n                      type=\"text\"\n                      placeholder=\"  type Card Name....\"\n                      className=\"create-card\"\n                      data-testid=\"addCard\"\n                      id={`card-${item.id}`}\n                      onChange={(e) => handleChange(e, item.id)}\n                    ></input>\n                    <button\n                      className=\"add-card-btn \"\n                      data-testid=\"create-btn\"\n                      onClick={() => createCard(item.id)}\n                    >\n                      Add a Card\n                    </button>\n                  </div>\n                )\n              })\n            ) : (\n              <div data-testid=\"loading-list\">..loading</div>\n            )}\n\n            <div className=\"create-list\">\n              <input\n                type=\"text\"\n                className=\"create-list-input\"\n                placeholder=\"   type list name \"\n                data-testid=\"newList\"\n                id=\"createList\"\n                onChange={creatingNewList}\n              ></input>\n              <button>\n                <div\n                  className=\"create-list-btn\"\n                  onClick={addNewList}\n                  data-testid=\"createList\"\n                >\n                  Create New List{' '}\n                  <span className=\"fa fa-plus plus-color\"></span>\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n    </div>\n  )\n}\nList.propTypes = {\n  setData: PropTypes.func.isRequired\n}\nexport default List\n"]},"metadata":{},"sourceType":"module"}